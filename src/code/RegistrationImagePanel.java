/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package code;

import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author user
 */
public class RegistrationImagePanel extends javax.swing.JFrame {
    
    public BufferedImage i;
    public static int x;
    public static int y;
    public static File f;

    /**
     * Creates new form Register
     */
    public RegistrationImagePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imagePanel.setLayout(new java.awt.GridLayout());
        getContentPane().add(imagePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 510, 390));

        jPanel1.setBackground(new java.awt.Color(216, 216, 216));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(145, 145, 145));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Choose Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, -1, 39));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 500));

        setSize(new java.awt.Dimension(546, 541));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            JFileChooser chooser = new JFileChooser("C:\\Users\\user\\Pictures");
            chooser.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter jpg = new FileNameExtensionFilter("Image JPG", "jpg");
            FileNameExtensionFilter png = new FileNameExtensionFilter("Image PNG", "png");
            FileNameExtensionFilter jpeg = new FileNameExtensionFilter("Image JPEG", "jpeg");
            chooser.addChoosableFileFilter(jpg);
            chooser.addChoosableFileFilter(png);
            chooser.addChoosableFileFilter(jpeg);
            int returnVal = chooser.showOpenDialog(this);
            

            

            if(returnVal == JFileChooser.APPROVE_OPTION)
                {
                    f = chooser.getSelectedFile();
                    i = ImageIO.read(f);
                    //getContentPane().removeAll();
                    //revalidate();
                    imageSplitter(i, 4);
                }
                revalidate();
                
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    /**
     *
     */
    public void imageSplitter(BufferedImage inputImage, int rowsandcolumns) throws IOException {
        
            getContentPane().removeAll();
            JPanel buf = new JPanel();
            buf.setName("imagePanel");
            buf.setLayout(new GridLayout(rowsandcolumns, rowsandcolumns));
            buf.setSize(imagePanel.getWidth(),imagePanel.getHeight()+10);
                
            BufferedImage image =new BufferedImage(imagePanel.getWidth(),imagePanel.getHeight(), inputImage.getType());
            Graphics2D g2d = image.createGraphics();
            g2d.drawImage(inputImage, 0, 0,imagePanel.getWidth(),imagePanel.getHeight(),null);
            getContentPane().setLayout(new GridLayout(rowsandcolumns, rowsandcolumns));
            g2d.dispose();
            // reads in file as an image
            
            int rows = rowsandcolumns; // You should decide the values for rows and cols// variables
            int columns = rowsandcolumns;
            int chunks = rows * columns;
            int chunkWidth = image.getWidth() / columns; // determines the chunk
                                                            // width and height
            int chunkHeight = image.getHeight() / rows;
            int count = 0;
            // initialize array to store 4 new images
            BufferedImage images[] = new BufferedImage[chunks];

            // For loop for rows
            for (int x = 0; x < rows; x++) {
                // For loop for columns
                for (int y = 0; y < columns; y++) {

                    // Creates subimages of the main image and stores them in the
                    // order of Quadrant II, III, I, IV
                    images[count] = image.getSubimage((y * chunkWidth), (x * chunkHeight), chunkWidth, chunkHeight);
                    count++;
                }
            }
            // For Loop that writes the each of the 4 new images from the array.
            for (int i = 1; i < images.length + 1; i++) {
                // ImageIO.write(images[i - 1], "jpg", new File("image" + i +
                // ".jpg"));
                JLabel imageLabel = new JLabel(new ImageIcon(images[i - 1]));
                imageLabel.setName(i + "");
                imageLabel.addMouseListener(new MouseAdapter(){
                    public void mouseClicked(MouseEvent e) {
                        System.out.println("Mouse clicked of clicks: " + imageLabel.getName().toString());
                        imageLabel.setEnabled(false);
                        imageLabel.removeMouseListener(this);
                    }
                });
                buf.add(imageLabel);
                getContentPane().add(buf);

            }
            //getContentPane().add(buf);
        }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationImagePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationImagePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationImagePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationImagePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationImagePanel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imagePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
